/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.example.demo;

/**
 *
 * @author saqib
 */

import java.security.SecureRandom;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

@Controller
public class HelloController {
    
    
        @Autowired // This means to get the bean called userRepository
             // Which is auto-generated by Spring, we will use it to handle the data
        private StudentRepository studentRepository;

	@RequestMapping("/")
	public String index(Model model) {
                SecureRandom r = new SecureRandom();
                int number = r.nextInt(1000);
                model.addAttribute("key", number);
		return "index";
	}
        
        @RequestMapping("/register")
	public String registration() {
                return "register";
	}
        
        @RequestMapping("/display")
	public String display() {
                return "display";
	}
        
        @ResponseBody
        @RequestMapping(value="/random", produces="text/plain")
	public String randomNumberGenerator() {
                SecureRandom r = new SecureRandom();
                int number = r.nextInt(1000);
                return Integer.toString(number);
	}
        
        @RequestMapping(value="/add", method=RequestMethod.POST) // Map ONLY POST Requests
        public String addNewUser (Model model,final RedirectAttributes redirectAttributes, @RequestParam String name
            , @RequestParam String guardianName, @RequestParam String rollNo, @RequestParam String age,@RequestParam String telephone,@RequestParam String notes) {
          // @ResponseBody means the returned String is the response, not a view name
          // @RequestParam means it is a parameter from the GET or POST request
            try {
            Student n = new Student();
            n.setName(name);
            n.setGuardianName(guardianName);
            n.setRollNo(rollNo);
            n.setAge(Integer.parseInt(age));
            n.setTelephone(telephone);
            n.setNotes(notes);
            studentRepository.save(n);
            redirectAttributes.addAttribute("key", "success!");
          } catch (Exception e) {
            redirectAttributes.addAttribute("key", "failure!");
          }
          
          return "redirect:register";
        }

        @GetMapping(path="/all")
        public @ResponseBody Iterable<Student> getAllUsers() {
          // This returns a JSON or XML with the users
          return studentRepository.findAll();
        }
        
        

}